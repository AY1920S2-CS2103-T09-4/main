@startuml
!include style.puml

title Sequence Diagram of Check Command

box Logic LOGIC_COLOR_T1
participant ":LogicManager" as LogicManager LOGIC_COLOR
'participant ":FitHelperParser" as FitHelperParser LOGIC_COLOR
'participant ":CheckCommandParser" as CheckCommandParser LOGIC_COLOR
participant "command:CheckCommand" as CheckCommand LOGIC_COLOR
participant "result:CommandResult" as Result LOGIC_COLOR
end box

box Model MODEL_COLOR_T1
participant ":ModelManager" as ModelManager MODEL_COLOR
participant ":FitHelper" as FitHelper MODEL_COLOR
'participant "list:List<CalorieEntry>" as list MODEL_COLOR
participant ":CalorieTable" as CalorieTable MODEL_COLOR
end box

 -> LogicManager : execute(userInput)
activate LogicManager

create CheckCommand
LogicManager -> CheckCommand : parseAndCreateCommand()
activate CheckCommand
LogicManager <-- CheckCommand : command
deactivate

'LogicManager -> FitHelperParser : parseCommand(userInput)
'activate FitHelperParser
'create CheckCommandParser
'FitHelperParser -> CheckCommandParser : parse(args)
'activate CheckCommandParser
'create CheckCommand
'CheckCommandParser -> CheckCommand
'activate CheckCommand
'CheckCommandParser <-- CheckCommand : command
'deactivate CheckCommand
'FitHelperParser <-- CheckCommandParser : command
'deactivate CheckCommandParser
'LogicManager <-- FitHelperParser : command
'deactivate

LogicManager -> CheckCommand : execute(model)
activate CheckCommand
CheckCommand -> ModelManager : searchTable(checkType, keyword)
activate ModelManager
ModelManager -> FitHelper : addCalorieEntry(type, keyword)
activate FitHelper
FitHelper -> CalorieTable : getEntries(type)
activate CalorieTable
FitHelper <-- CalorieTable : entries
deactivate

FitHelper -> FitHelper : searchEachWordCompleteMatch(keywords)
activate FitHelper
FitHelper --> FitHelper : count
deactivate
opt fewer than 3 entries are added so far, i.e. count < 3
FitHelper -> FitHelper : searchWholeWordPartialMatch(keyword)
activate FitHelper
FitHelper --> FitHelper : count
deactivate
end
opt fewer than 3 entries are added so far, i.e. count < 3
FitHelper -> FitHelper : checkAndAddEntryToList(entry)
activate FitHelper
FitHelper --> FitHelper :
deactivate
end

FitHelper --> ModelManager : List<CalorieEntry>
deactivate FitHelper
ModelManager --> CheckCommand : List<CalorieEntry>
deactivate ModelManager
create Result
CheckCommand -> Result
activate Result
Result --> CheckCommand : result
deactivate
CheckCommand --> LogicManager : result
deactivate CheckCommand

<-- LogicManager : result
deactivate LogicManager
destroy CheckCommand

@enduml
